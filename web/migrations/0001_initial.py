# Generated by Django 4.2.7 on 2023-11-15 17:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('sus_number', models.CharField(max_length=7)),
                ('address', models.CharField(max_length=100)),
                ('address_number', models.CharField(max_length=6)),
                ('city', models.CharField(max_length=100)),
                ('neighborhood', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=9)),
                ('phone', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icd', models.CharField(max_length=6, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('council_number', models.CharField(max_length=100)),
                ('sus_number', models.CharField(max_length=100)),
                ('speciality', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Issuer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.clinic')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('dosage', models.CharField(max_length=100)),
                ('formulation', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('age', models.IntegerField()),
                ('gender', models.CharField(max_length=100)),
                ('mother_name', models.CharField(max_length=100)),
                ('disabled', models.BooleanField()),
                ('responsible', models.CharField(max_length=100)),
                ('identity', models.CharField(max_length=100)),
                ('weight', models.FloatField()),
                ('height', models.FloatField()),
                ('ethnicity', models.CharField(max_length=100)),
                ('social_security_number', models.CharField(max_length=14)),
                ('sus_number', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('city', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=9)),
                ('telephone', models.CharField(max_length=11)),
                ('telephone_2', models.CharField(max_length=11)),
                ('user', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PatientCareLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('associated_date', models.DateField(default=django.utils.timezone.now)),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.clinic')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anamnesis', models.TextField(max_length=1000)),
                ('prescription', models.JSONField()),
                ('previous_treatment', models.BooleanField(default=False)),
                ('previous_medications', models.TextField(max_length=1000)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('filled_by', models.CharField(choices=[('P', 'Patient'), ('C', 'Caregiver'), ('M', 'Mother'), ('D', 'Doctor')], max_length=128)),
                ('conditional_data', models.JSONField()),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.clinic')),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.disease')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.doctor')),
                ('issuer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.issuer')),
                ('medication', models.ManyToManyField(to='web.medication')),
                ('medications', models.ManyToManyField(related_name='prescriptions', to='web.medication')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('link', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.patientcarelink')),
            ],
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('pdf', models.CharField(max_length=600)),
                ('conditional_data', models.JSONField()),
                ('medications', models.ManyToManyField(to='web.medication')),
                ('prescription', models.ManyToManyField(to='web.prescription')),
            ],
        ),
        migrations.AddField(
            model_name='issuer',
            name='patient',
            field=models.ManyToManyField(through='web.Prescription', to='web.patient'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='clinics',
            field=models.ManyToManyField(through='web.Issuer', to='web.clinic'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='patients',
            field=models.ManyToManyField(through='web.PatientCareLink', to='web.patient'),
        ),
        migrations.AddField(
            model_name='disease',
            name='protocol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.protocol'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_groups', related_query_name='customuser', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_user_permissions', related_query_name='customuser', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'custom user',
                'verbose_name_plural': 'custom users',
            },
        ),
        migrations.AddField(
            model_name='clinic',
            name='doctors',
            field=models.ManyToManyField(through='web.Issuer', to='web.doctor'),
        ),
        migrations.AddField(
            model_name='clinic',
            name='patients',
            field=models.ManyToManyField(to='web.patient'),
        ),
    ]
