# Generated by Django 4.2.7 on 2023-11-22 19:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('name', models.CharField(max_length=100)),
                ('sus_number', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('address', models.CharField(max_length=100)),
                ('address_number', models.CharField(max_length=6)),
                ('city', models.CharField(max_length=100)),
                ('neighborhood', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=9)),
                ('phone', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icd', models.CharField(max_length=6, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('council_number', models.CharField(max_length=100)),
                ('sus_number', models.CharField(max_length=100)),
                ('speciality', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('dosage', models.CharField(max_length=100)),
                ('formulation', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('age', models.IntegerField()),
                ('gender', models.CharField(max_length=100)),
                ('mother_name', models.CharField(max_length=100)),
                ('disabled', models.BooleanField()),
                ('responsible', models.CharField(max_length=100)),
                ('identity', models.CharField(max_length=100)),
                ('weight', models.FloatField()),
                ('height', models.FloatField()),
                ('ethnicity', models.CharField(max_length=100)),
                ('social_security_number', models.CharField(max_length=14, unique=True)),
                ('sus_number', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('city', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=9)),
                ('telephone', models.CharField(max_length=11)),
                ('telephone_2', models.CharField(max_length=11)),
                ('user', models.ManyToManyField(related_name='patients', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PatientCareLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('associated_date', models.DateField(default=django.utils.timezone.now)),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.clinic')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('link', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.patientcarelink')),
            ],
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('pdf', models.CharField(max_length=600)),
                ('conditional_data', models.JSONField()),
                ('medications', models.ManyToManyField(related_name='protocols', to='web.medication')),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anamnesis', models.TextField(max_length=1000)),
                ('posology', models.JSONField()),
                ('previous_treatment', models.BooleanField(default=False)),
                ('previous_medications', models.TextField(max_length=1000)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('filled_by', models.CharField(choices=[('P', 'Patient'), ('C', 'Caregiver'), ('M', 'Mother'), ('D', 'Doctor')], max_length=128)),
                ('conditional_data', models.JSONField()),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.disease')),
                ('issuer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prescriptions', to='users.issuer')),
                ('medication', models.ManyToManyField(related_name='prescriptions', to='web.medication')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.patient')),
                ('protocol', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.protocol')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.visit')),
            ],
        ),
        migrations.AddField(
            model_name='doctor',
            name='patients',
            field=models.ManyToManyField(related_name='doctors', through='web.PatientCareLink', to='web.patient'),
        ),
        migrations.AddField(
            model_name='disease',
            name='protocol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.protocol'),
        ),
        migrations.AddField(
            model_name='clinic',
            name='doctors',
            field=models.ManyToManyField(related_name='clinics', through='users.Issuer', to='web.doctor'),
        ),
        migrations.AddField(
            model_name='clinic',
            name='patients',
            field=models.ManyToManyField(related_name='clinics', through='web.PatientCareLink', to='web.patient'),
        ),
    ]
